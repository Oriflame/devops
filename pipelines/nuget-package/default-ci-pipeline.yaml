# [default] pipeline for nuget package project, use for [master] branch
# suitable for simplified gitflow =>
# branch under /feature folder: no package is created by default by CI, if needed, specify pack variable => ALPHA version will be created
# develop branch => -prerelease-XX package is created and pushed to GlobalDev
# master branch => stable version x.x.0 is pushed to GlobalDev

parameters:
  dotnetcoreversion: '2.2.402'
  nugetversion: '5.3.0'
  pathToProjects: '$(Build.SourcesDirectory)/src/**/*.csproj'
  pathToTestProjects: '$(Build.SourcesDirectory)/test/**/*.csproj'
  nugetFeedFromDevops: '/8187f5c9-e9c1-419f-8a5c-98285cf7633c' #GlobalDev
  nugetDevOpsFeedToPublish: '/8187f5c9-e9c1-419f-8a5c-98285cf7633c' #GlobalDev
  pushpackage: '' #set to true or false to override variable "pushpackage". If not set, varibale "pushpackage" is used in template step PUSH = it is not executed
  noBuild: 'false'
  noUnitTests: 'false'
  verbosityRestore: 'Minimal'
  VersionSuffix: '' #set in case you want to override default semver version (from gitversion)
  buildConfiguration: 'release'
  vmImage: 'ubuntu-latest'
  jobName: 'Build'

jobs:
- job: '${{ parameters.jobName }}'
  
  pool:
    vmImage: '${{ parameters.vmImage }}'

  variables:
    BuildConfiguration: '${{ parameters.buildConfiguration }}'
#    ${{ if eq(parameters.VersionSuffix, '') }}:
#      VersionSuffix: 'alpha-$(Build.BuildId)'
#    ${{ if ne(parameters.VersionSuffix, '') }}:
#      VersionSuffix: '${{ parameters.VersionSuffix }}'
    ${{ if ne(parameters.pushpackage, '') }}:
      pushpackage: ${{ parameters.pushpackage }}

  steps:

  - template: templates/prerequisities.yaml
    parameters:
      dotnetcoreversion: '${{ parameters.dotnetcoreversion }}'
      nugetversion: '${{ parameters.nugetversion }}'

  - template: ../shared-templates/gitversion.yaml

  - template: templates/build.yaml
    parameters:
      pathToProjects: '${{ parameters.pathToProjects }}'
      nugetFeedFromDevops: '${{ parameters.nugetFeedFromDevops }}'
      verbosityRestore: '${{ parameters.verbosityRestore }}'
      buildConfiguration: '${{ parameters.buildConfiguration }}'
      noBuild: '${{ parameters.noBuild }}'

  - template: templates/test.yaml
    parameters:
      pathToTestProjects: '${{ parameters.pathToTestProjects }}'
      buildConfiguration: '${{ parameters.buildConfiguration }}'
      noUnitTests: '${{ parameters.noUnitTests }}'

  - template: templates/pack.yaml
    parameters:
      pathToProjects: '${{ parameters.pathToProjects }}'
      buildConfiguration: '${{ parameters.buildConfiguration }}'

  - template: ../shared-templates/push.yaml
    parameters:
      nugetDevOpsFeedToPublish: '${{ parameters.nugetDevOpsFeedToPublish }}'
